@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>Spiking Azure Platform for Azure App Services</h1>
    <p class="lead">The porpuse of this site is to have an example of bad code behaviours that can strongly impact App Services Performance .</p>
    <p><a href="https://docs.microsoft.com/en-us/azure/app-service/troubleshoot-performance-degradation" class="btn btn-primary btn-lg">Further Info Related to Perfomance in App Service Plans &raquo;</a></p>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>CPU</h2>
        <p>
            An usual issue with App Services are the CPU spikes. This sometimes confusing, due to the customers thinks that the CPU is isolated per App Service.
            However it is not, if you have more App Services/Function Apps hosted in the same App Service plan the CPU will be shared across ALL apps in the instance
            
            A second bad scenario, is using or not understanding bad code practices. Some(by not saying the most) loop algorithms can produce CPU exhaustion if not manage the "exit condition" correctly.
            This add more Algoritm complexity Big O(), which is not the most optimous way to execute a task
            Be careful on that.
        </p>
        <p><a class="btn btn-default" href="https://docs.microsoft.com/en-us/azure/app-service/troubleshoot-performance-degradation">Learn more about what to do &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>RAM</h2>
        <p>
            As the same way of the CPU, the Random Access Memory(RAM) is shared accross all the apps in the Service Plan. This memory is used by the CPU to allocate "states" or memory of the CPU execution.
            In summary, most of the execution happens because the RAM gives enough memory to the CPU to use, but when this does not happen, we find an "StackOverFlow Exception", meaning that there are not more space.
            Remember Memeory RAM, is a physical device that can he exhausted as well as storage devices.
            Without memory RAM available, your processes cannot continue running until the RAM gets more free space. Usually when this happen, an uninstensional restart is trigger by most Operative System in the market

            A second bad scenario, is using or not understanding bad code practices. Some(by not saying the most) recursive algorithms can produce RAM exhaustion. Be careful on that.
        </p>
        <p><a class="btn btn-default" href="https://docs.microsoft.com/en-us/azure/app-service/troubleshoot-performance-degradation">Analyzing Memory Dumps is very helpful here &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>TCP/SNAT</h2>
        <p>
            This is a very common issue. This means that there are leaking of TCP connections or SNAT port exhaustation.

            First we have to understand a NAT(Network Address Translation), this is used when in your WAN o VLAN you are using your own and customized IP address(mostly private). But when a resource of this topology needs to make a request outside of the WAN/VLAN(or Azure)
            That private IP needs to be translated to a Public IP, this task is made by the NAT. Now with an Public IP for the request, this will need a source port, to make the outbout request, that's why a role called
            "SNAT", which is the role assigned to assign a Source(Source-NAT) Port to the public IP, so it can make a request outside if the network. SNAT Ports Availablity are shared and limited accross the STAMP.
            Meaning that if you have "noisy" neighboors in your STAMP, you could receive the SNAT issue but not being your fault. For those cases there's a known action plan to switch your App Service Plan to a healthier stamp. 
            Open a ticket with Azure Support Team and they will gladly helping you. Don't forget to leave a 5-star suvery to the engineer'
            However if customer do not make usage of connnection pooling, static(singleton) HttpClients Objects, keeps active the connections to Databases even when is not necessary, or create a lot of connections intentionally, is very expected to see this issue on their Apps

        </p>
        <p>
            <a class="btn btn-default" href="https://4lowtherabbit.github.io/blogs/2019/10/SNAT/">Understanding SNAT &raquo;</a>
            <a class="btn btn-default" href="https://devblogs.microsoft.com/premier-developer/reducing-snat-port-consumption-in-azure-app-services/"> Reducing SNAT Port consumption in Azure App Services &raquo; </a>
            <a class="btn btn-default" href="https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-outbound-connections">Using Source Network Address Translation (SNAT) for outbound connections &raquo;</a>
            <a class="btn btn-default" href="https://www.geeksforgeeks.org/difference-between-snat-and-dnat/"> Difference between SNAT and DNAT &raquo;
            </a>
        </p>
    </div>
</div>